1. 객체의 기본 구조와 프로퍼티
개념 정리
**객체(Object)**는 여러 개의 데이터를 하나로 묶어서 표현할 수 있는 자료형이다.

객체는 key와 value로 이루어진 프로퍼티(property)의 집합이다.

js
복사
편집
const student = {
  name: "철수",
  age: 20,
  isStudent: true,
  hobbies: ["축구", "게임"]
};

// 프로퍼티 접근
console.log(student.name);       // "철수"
console.log(student["age"]);     // 20
2. 배열 관련 함수 예시
자주 사용하는 배열 메서드
메서드	설명
push()	배열의 맨 뒤에 요소 추가
pop()	배열의 맨 뒤 요소 제거
shift()	배열의 맨 앞 요소 제거
unshift()	배열의 맨 앞에 요소 추가
forEach()	배열의 각 요소에 대해 반복 수행 (반환값 없음)
map()	각 요소를 변형하여 새 배열을 반환
filter()	조건에 맞는 요소만 모아 새 배열로 반환
js
복사
편집
let fruits = ["apple", "banana", "cherry"];

fruits.push("orange");  // ["apple", "banana", "cherry", "orange"]
fruits.pop();           // ["apple", "banana", "cherry"]

// map - 요소 변형
let newFruits = fruits.map(fruit => fruit + "주스");
console.log(newFruits); // ["apple주스", "banana주스", "cherry주스"]

// filter - 특정 조건 필터링
let bFruits = fruits.filter(fruit => fruit.startsWith("b"));
console.log(bFruits); // ["banana"]

// forEach - 단순 반복
fruits.forEach((fruit, index) => {
  console.log(`${index + 1}번째 과일: ${fruit}`);
});
3. 어려웠던 점과 보완한 내용
(1) 객체에서 값 접근 방식 차이
obj.key : key가 문자열일 때 일반적으로 사용

obj["key"] : key가 변수일 때 사용

js
복사
편집
const keyName = "name";
console.log(student[keyName]); // "철수"
(2) map과 forEach의 차이
forEach()는 단순히 반복만 수행하고, 반환값이 없다.

map()은 각 요소를 변형해서 새로운 배열을 만들어 반환한다.

(3) filter와 map을 조합해서 사용하는 경우
js
복사
편집
let scores = [70, 85, 90, 60];
let highScores = scores
  .filter(score => score >= 80)
  .map(score => score + "점");

console.log(highScores); // ["85점", "90점"]
ddd